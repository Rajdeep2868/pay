"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/razorpay-notify/route";
exports.ids = ["app/api/razorpay-notify/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frazorpay-notify%2Froute&page=%2Fapi%2Frazorpay-notify%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frazorpay-notify%2Froute.ts&appDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frazorpay-notify%2Froute&page=%2Fapi%2Frazorpay-notify%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frazorpay-notify%2Froute.ts&appDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_kavinthakur_Desktop_quest_FP_app_api_razorpay_notify_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/razorpay-notify/route.ts */ \"(rsc)/./app/api/razorpay-notify/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/razorpay-notify/route\",\n        pathname: \"/api/razorpay-notify\",\n        filename: \"route\",\n        bundlePath: \"app/api/razorpay-notify/route\"\n    },\n    resolvedPagePath: \"/Users/kavinthakur/Desktop/quest/FP/app/api/razorpay-notify/route.ts\",\n    nextConfigOutput,\n    userland: _Users_kavinthakur_Desktop_quest_FP_app_api_razorpay_notify_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/razorpay-notify/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyYXpvcnBheS1ub3RpZnklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnJhem9ycGF5LW5vdGlmeSUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnJhem9ycGF5LW5vdGlmeSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmthdmludGhha3VyJTJGRGVza3RvcCUyRnF1ZXN0JTJGRlAlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGa2F2aW50aGFrdXIlMkZEZXNrdG9wJTJGcXVlc3QlMkZGUCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDb0I7QUFDakc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdXNpb25wYXkvP2QwMTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2thdmludGhha3VyL0Rlc2t0b3AvcXVlc3QvRlAvYXBwL2FwaS9yYXpvcnBheS1ub3RpZnkvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwic3RhbmRhbG9uZVwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9yYXpvcnBheS1ub3RpZnkvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9yYXpvcnBheS1ub3RpZnlcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3Jhem9ycGF5LW5vdGlmeS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9rYXZpbnRoYWt1ci9EZXNrdG9wL3F1ZXN0L0ZQL2FwcC9hcGkvcmF6b3JwYXktbm90aWZ5L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3Jhem9ycGF5LW5vdGlmeS9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frazorpay-notify%2Froute&page=%2Fapi%2Frazorpay-notify%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frazorpay-notify%2Froute.ts&appDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/razorpay-notify/route.ts":
/*!******************************************!*\
  !*** ./app/api/razorpay-notify/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\n// Razorpay test key provided by the user\nconst RAZORPAY_KEY_ID = \"rzp_test_a4zcZABGsJEBrs\";\n// Secret key should be stored in environment variables in production\n// For this demo, we'll use a placeholder that should be replaced with your actual secret\nconst RAZORPAY_SECRET = \"your_razorpay_secret_key\";\n// Helper function to better format logs\nconst logWithDetails = (message, data)=>{\n    console.log(`[Razorpay API] ${message}:`, JSON.stringify(data, null, 2));\n};\nasync function POST(request) {\n    console.log(\"[Razorpay API] Received request\");\n    // CORS headers to allow requests from any origin during development\n    const corsHeaders = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n    };\n    // Handle OPTIONS request for CORS preflight\n    if (request.method === \"OPTIONS\") {\n        return new next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, {\n            status: 204,\n            headers: corsHeaders\n        });\n    }\n    try {\n        // Parse request body\n        let data;\n        try {\n            data = await request.json();\n            logWithDetails(\"Received payment notification data\", data);\n        } catch (error) {\n            console.error(\"[Razorpay API] Failed to parse request body:\", error);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Invalid request body - not valid JSON\"\n            }, {\n                status: 400,\n                headers: corsHeaders\n            });\n        }\n        // Validate required fields\n        const requiredFields = [\n            \"amount\",\n            \"cryptoAmount\",\n            \"cryptoCurrency\"\n        ];\n        const missingFields = requiredFields.filter((field)=>!data[field]);\n        if (missingFields.length > 0) {\n            console.error(`[Razorpay API] Missing required fields: ${missingFields.join(\", \")}`);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: `Missing required fields: ${missingFields.join(\", \")}`\n            }, {\n                status: 400,\n                headers: corsHeaders\n            });\n        }\n        // Extract payment details from request\n        const { amount, merchantVpa, transactionHash, cryptoAmount, cryptoCurrency, paymentId, merchantId, timestamp } = data;\n        // Log detailed payment information for debugging\n        logWithDetails(\"Processing payment data\", {\n            amount,\n            merchantVpa,\n            cryptoAmount,\n            cryptoCurrency,\n            transactionHash: transactionHash ? `${transactionHash.substring(0, 10)}...` : \"none\",\n            timestamp\n        });\n        // If we're in a real environment, make actual calls to Razorpay APIs\n        // For this hackathon demo, we'll make simulated requests that could be replaced with real ones\n        // 1. Create a Razorpay order (simulated but using real API structure)\n        const orderData = {\n            amount: Math.round(parseFloat(amount) * 100),\n            currency: \"INR\",\n            receipt: `crypto_tx_${Date.now()}`,\n            payment_capture: 1,\n            notes: {\n                crypto_amount: cryptoAmount,\n                crypto_currency: cryptoCurrency,\n                transaction_hash: transactionHash,\n                payment_method: \"crypto\",\n                merchant_vpa: merchantVpa,\n                merchant_name: merchantId,\n                timestamp: timestamp || new Date().toISOString()\n            }\n        };\n        logWithDetails(\"Creating Razorpay order with data\", orderData);\n        // For the demo, simulate a successful order creation\n        const orderId = `order_demo_${Date.now()}`;\n        // 2. Simulate payment capture (as if the customer has paid)\n        const paymentData = {\n            amount: orderData.amount,\n            currency: \"INR\",\n            receipt: orderData.receipt,\n            payment_capture: 1,\n            notes: orderData.notes\n        };\n        logWithDetails(\"Would capture payment with data\", paymentData);\n        // 3. Create a virtual payment record for this transaction\n        // For this demo, we'll simulate this\n        const virtualPayment = {\n            id: `pay_demo_${Date.now()}`,\n            entity: \"payment\",\n            amount: orderData.amount,\n            currency: \"INR\",\n            status: \"captured\",\n            order_id: orderId,\n            method: \"crypto\",\n            captured: true,\n            description: `Crypto payment: ${cryptoAmount} ${cryptoCurrency}`,\n            notes: orderData.notes,\n            created_at: Math.floor(Date.now() / 1000)\n        };\n        // In a real implementation, you might store this information in your database\n        // For debugging purposes, add some logging information for QR code payments\n        if (merchantVpa && merchantVpa.includes(\"@razorpay\")) {\n            console.log(`[Razorpay API] Successfully processed payment to Razorpay merchant: ${merchantVpa}`);\n            console.log(`[Razorpay API] Payment would be reflected in the merchant's Razorpay dashboard`);\n        }\n        const responseData = {\n            success: true,\n            message: \"Payment successfully recorded with Razorpay\",\n            data: {\n                order_id: orderId,\n                payment: virtualPayment\n            }\n        };\n        // Final success log before returning\n        console.log(`[Razorpay API] Successfully processed payment of ${amount} INR (${cryptoAmount} ${cryptoCurrency})`);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(responseData, {\n            headers: corsHeaders\n        });\n    } catch (error) {\n        console.error(\"[Razorpay API] Error processing payment:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            message: \"Failed to notify Razorpay\",\n            error: error.message || \"Unknown error\"\n        }, {\n            status: 500,\n            headers: corsHeaders\n        });\n    }\n}\n// Handle OPTIONS request for CORS preflight\nasync function OPTIONS() {\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({}, {\n        headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"POST, OPTIONS\",\n            \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\"\n        }\n    });\n}\n// In a real implementation, you would also need a function to validate Razorpay webhooks\n// This would use the webhook secret to verify that the request is coming from Razorpay\nfunction verifyRazorpayWebhook(payload, signature) {\n    // Implementation would verify signature using crypto\n    return true; // Placeholder for demo\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/razorpay-notify/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frazorpay-notify%2Froute&page=%2Fapi%2Frazorpay-notify%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frazorpay-notify%2Froute.ts&appDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkavinthakur%2FDesktop%2Fquest%2FFP&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();